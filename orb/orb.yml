version: 2.1
description: Secret-injector orb

executors:
  secret_image:
    docker:
      - image: harbor.bestsellerit.com/library/harpocrates:$HARPOCRATES_VERSION

jobs:
  dump-secrets:
    description: Read secret from Vault and write to /secrets/secrets
    executor: secret_image
    parameters:
      vault-path:
        type: string
        default: ""
        description: Secret path to read from Vault
      output:
        type: string
        default: "/tmp"
        description: Path in the workspace to store the secrets
      output-filename:
        type: string
        default: "secrets"
        description: Name of the secret file that will be generated. Without extension.
      format:
        type: enum
        default: "env"
        enum: ["env", "json", "secret"]
        description: Type of output you want to store the secrets as (will not change the file extension)
      short:
        type: string
        default: ""
        description: Vault account prefix to pull, will default to an environment var called SHORT
    environment:
        VAULT_PATH: <<parameters.vault-path>>
        OUTPUT: <<parameters.output>>
        OUTPUT_FILENAME: <<parameters.output-filename>>
        FORMAT: <<parameters.format>>
        SHORT: <<parameters.short>>
    steps:
      - attach_workspace:
          at: /tmp
      - vault-login
      - run:
          name: Secret-injector - Write secrets to file
          command: <<include(scripts/dump-secrets.sh)>>
      - persist_to_workspace:
          root: << parameters.output >>
          paths:
            - secrets
            - << parameters.output-filename >>
            - cluster_secret.json

commands:
  use-secrets:
    description: Will add the secrets to BASH_ENV, defaults to /tmp/secrets
    parameters:
      file:
        type: string
        default: "/tmp/secrets"
        description: Filepath to source (defaults to /tmp/secrets)
    environment:
        FILE: <<parameters.file>
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Secret-injector - Adding secrets to BASH_ENV
          command: <<include(scripts/use-secrets.sh)>>
  vault-login:
    steps:
      - run:
          name: Secret-injector - Install Vault and login
          command: <<include(scripts/vault-login.sh)>>

  inject:
    description: Secret-injector orb
    parameters:
      app-name:
        description: Name of the deployment to inject secrets into
        type: string
      deploy-file:
        description: Path to your deployment file
        type: string
      secret-file:
        description: Path to your secret file
        type: string
      container-name:
        description: Name of the container to inject secrets into
        type: string
        default: ""
      deploy-type:
        type: enum
        default: "Deployment"
        enum: ["Deployment", "StatefulSet", "CronJob"]
    environment:
        APP_NAME: <<parameters.app-name>
        DEPLOY_FILE: <<parameters.deploy-file>>
        SECRET_FILE: <<parameters.secret-file>>
        CONTAINER_NAME: <<parameters.container-name>>
        DEPLOY_TYPE: <<parameters.deploy-type>>
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Secret-injector - Download & install yq
          command: |
            VERSION=2.4.0
            wget -O /usr/bin/yq https://github.com/mikefarah/yq/releases/download/$VERSION/yq_linux_amd64
            chmod +x /usr/bin/yq
      - vault-login
      - run:
          name: Secret-injector - kubectl kustomize
          command: <<include(scripts/inject-secrets.sh)>>
