version: 2.1
executors:
  go_image:
    docker:
      - image: cimg/go:1.15

orbs:
  secret-injector: bestsellerit/secret-injector@0.2.51

jobs:
  test:
    executor: go_image
    steps:
      - checkout
      - run:
          name: go get
          command: |
            go get ./...
      - run:
          name: install gotestsum
          command: go get -u gotest.tools/gotestsum
      - run:
          name: go test
          command: |
            mkdir junit
            gotestsum --junitfile junit/unit-tests.xml
      - store_test_results:
          path: ~/project/junit
      - run:
          name: go build
          command: |
            GOOS=linux \
            GOARCH=amd64 \
            go build -ldflags="-w -s"

  build-go:
    executor: go_image
    steps:
      - attach_workspace:
          at: /tmp
      - checkout
      - run:
          name: go build - windows/amd64
          command: |
            GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o harpocrates.exe
            tar -czvf /tmp/harpocrates_$CIRCLE_TAG\_windows_amd64.tar.gz harpocrates.exe
            rm harpocrates.exe
      - run:
          name: go build - darwin/amd64
          command: |
            GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o harpocrates
            tar -czvf /tmp/harpocrates_$CIRCLE_TAG\_darwin_amd64.tar.gz harpocrates
            rm harpocrates
      - run:
          name: go build - linux/amd64
          command: |
            GOOS=linux GOARCH=amd64 go build -ldflags="-w -s" -o harpocrates
            tar -czvf /tmp/harpocrates_$CIRCLE_TAG\_linux_amd64.tar.gz harpocrates
            mv harpocrates /tmp
      - persist_to_workspace:
          root: /tmp
          paths:
            - harpocrates*
  docker-build-n-push:
    docker:
      - image: docker:18.06.3-ce-git
    working_directory: /app
    steps:
      - attach_workspace:
          at: /tmp
      - checkout
      - setup_remote_docker
      - run:
          name: Push and build image
          command: |
            source /tmp/secrets
            cp /tmp/harpocrates .
            docker login -u $docker_harpocrates_username -p $docker_harpocrates_password $K8S_CLUSTER_docker_registry_url
            docker build \
              -t $K8S_CLUSTER_docker_registry_url/library/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG \
              -t $K8S_CLUSTER_docker_registry_url/library/$CIRCLE_PROJECT_REPONAME:latest \
              .
            docker push $K8S_CLUSTER_docker_registry_url/library/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG
            docker push $K8S_CLUSTER_docker_registry_url/library/$CIRCLE_PROJECT_REPONAME:latest
  docker-build:
    docker:
      - image: docker:18.06.3-ce-git
    working_directory: /app
    steps:
      - attach_workspace:
          at: /tmp
      - checkout
      - setup_remote_docker
      - run:
          name: Push and build image
          command: |
            source /tmp/secrets
            cp /tmp/harpocrates .
            docker login -u $docker_harpocrates_username -p $docker_harpocrates_password $K8S_CLUSTER_docker_registry_url
            docker build \
              -t $K8S_CLUSTER_docker_registry_url/library/$CIRCLE_PROJECT_REPONAME:latest \
              .

  publish:
    executor: go_image
    steps:
      - attach_workspace:
          at: /tmp
      - checkout
      - run:
          name: Install Vault and login
          command: |
            VERSION=1.2.3
            wget https://releases.hashicorp.com/vault/$VERSION/vault_$VERSION\_linux_amd64.zip
            sudo unzip -o vault_$VERSION\_linux_amd64.zip -d /usr/bin/
            sudo chmod +x /usr/bin/vault
            vault login -method=userpass username=$VAULT_USERNAME password=$VAULT_PASSWORD >/dev/null
      - run:
          name: Create release folder
          command: |
            mkdir releases
            cp /tmp/harpocrates_* ./releases
      - run:
          name: Update stuff with git tag
          command: |
            sed -i -e "s?\$HARPOCRATES_VERSION?$CIRCLE_TAG?g" orb/CronJob.yml
            sed -i -e "s?\$HARPOCRATES_VERSION?$CIRCLE_TAG?g" orb/Deployment.yml
            sed -i -e "s?\$HARPOCRATES_VERSION?$CIRCLE_TAG?g" orb/orb.yml
            sed -i -e "s?\$HARPOCRATES_VERSION?$CIRCLE_TAG?g" orb/StatefulSet.yml
            cp orb/CronJob.yml ./releases
            cp orb/Deployment.yml ./releases
            cp orb/StatefulSet.yml ./releases
            cp orb/kustomization.yml ./releases
      - run:
          name: Download ghr
          command: |
            GHR_VERSION=v0.13.0
            wget -O ghr.tar.gz https://github.com/tcnksm/ghr/releases/download/$GHR_VERSION/ghr_$GHR_VERSION\_linux_386.tar.gz
            tar -xvzf ghr.tar.gz
            sudo mv ghr_$GHR_VERSION\_linux_386/ghr /usr/local/bin
      - run:
          name: Create Github releases
          command: |
            ghr -replace $CIRCLE_TAG ./releases
      - run:
          name: Publish CircleCI orb
          command: |
            # wget https://github.com/CircleCI-Public/circleci-cli/releases/download/v0.1.5879/circleci-cli_0.1.5879_linux_amd64.tar.gz
            # tar -xf circleci-cli_0.1.5879_linux_amd64.tar.gz
            # mv circleci-cli_0.1.5879_linux_amd64 cli

            export CIRCLECI_CLI_TOKEN=$(vault kv get -field=circleci_token ES/harpocrates)
            CC_NAMESPACE=bestsellerit
            ORB_PATH=./orb/orb.yml
            ORB_NAME=secret-injector

            ./cli/circleci orb validate $ORB_PATH
            ./cli/circleci orb publish $ORB_PATH $CC_NAMESPACE/$ORB_NAME@$CIRCLE_TAG
            ./cli/circleci orb unlist $CC_NAMESPACE/$ORB_NAME false

workflows:
  test:
    jobs:
      - secret-injector/dump-secrets:
          name: secrets-common
          context: es02-prod
          filters:
            tags:
              ignore: /^[0-9]+(\.[0-9]+)*(-.*)*$/
      - secret-injector/dump-secrets:
          name: secrets-app
          vault-path: ES/data/service_accounts/harbor/harpocrates-ci
          requires:
            - secrets-common
          context: es02-prod
          filters:
            tags:
              ignore: /^[0-9]+(\.[0-9]+)*(-.*)*$/
      - test:
          filters:
            tags:
              ignore: /^[0-9]+(\.[0-9]+)*(-.*)*$/
      - build-go:
          context: es02-prod
          requires:
            - secrets-app
          filters:
            tags:
              ignore: /^[0-9]+(\.[0-9]+)*(-.*)*$/
      - docker-build:
          context: es02-prod
          requires:
            - build-go
          filters:
            tags:
              ignore: /^[0-9]+(\.[0-9]+)*(-.*)*$/

  test-build:
    jobs:
      - secret-injector/dump-secrets:
          name: secrets-common
          context: es02-prod
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(-.*)*$/
            branches:
              ignore: /.*/
      - secret-injector/dump-secrets:
          name: secrets-app
          vault-path: ES/data/service_accounts/harbor/harpocrates-ci
          output: /tmp
          context: es02-prod
          requires:
            - secrets-common
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(-.*)*$/
            branches:
              ignore: /.*/
      - test:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(-.*)*$/
            branches:
              ignore: /.*/
      - build-go:
          context: es02-prod
          requires:
            - secrets-app
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(-.*)*$/
            branches:
              ignore: /.*/
      - docker-build-n-push:
          context: es02-prod
          requires:
            - build-go
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(-.*)*$/
            branches:
              ignore: /.*/
      - publish:
          context: es02-prod
          requires:
            - docker-build-n-push
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(-.*)*$/
            branches:
              ignore: /.*/
